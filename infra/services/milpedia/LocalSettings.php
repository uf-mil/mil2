<?php
# This file was automatically generated by the MediaWiki 1.43.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

error_reporting( E_ALL );
ini_set( 'display_errors', 1 );

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "MILpedia";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
# $wgScriptPath = "/mediawiki";
# $wgScript = "/w/index.php";
# $wgArticlePath = "/wiki/Page_title";
$wgScriptPath = "/w";
$wgArticlePath = "/wiki/$1";
$wgUsePathInfo = true;

## The protocol and server name to use in fully-qualified URLs
$wgServer = getenv("SERVER_LOCATION");

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
	'1x' => "$wgResourceBasePath/resources/assets/mil-white.svg",
	'icon' => "$wgResourceBasePath/resources/assets/mil-white.svg",
];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = getenv("SMTP_EMAIL");
$wgPasswordSender = getenv("SMTP_EMAIL");

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

$wgSMTP = [
    'host'      => getenv("SMTP_HOST"),             // could also be an IP address. Where the SMTP server is located. If using SSL or TLS, add the prefix "ssl://" or "tls://".
    'IDHost'    => getenv("SERVER_NAME"),      // Generally this will be the domain name of your website (aka mywiki.org)
    'localhost' => getenv("SERVER_NAME"),      // Same as IDHost above; required by some mail servers
    'port'      => 587,                        // Port to use when connecting to the SMTP server
    'auth'      => true,                       // Should we use SMTP authentication (true or false)
    'username'  => getenv("SMTP_USER"),        // Username to use for SMTP authentication (if being used)
    'password'  => getenv("SMTP_PASS"),        // Password to use for SMTP authentication (if being used)
];

# Ensure that admins can edit CSS/JS
$wgGroupPermissions['sysop']['editsitecss'] = true;
$wgGroupPermissions['sysop']['editsitejs'] = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "database";
$wgDBname = "my_wiki";
$wgDBuser = getenv("MARIADB_USER");
$wgDBpassword = getenv("MARIADB_PASS");

# Enable logs
$wgDebugLogFile = "/var/log/mediawiki/debug-{$wgDBname}.log";

# MySQL specific settings
$wgDBprefix = "";
$wgDBssl = false;

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Add leaders namespace
define("NS_LEAD", 38); // This MUST be even.
define("NS_LEAD_TALK", 39); // This MUST be the following odd integer.
$wgExtraNamespaces[NS_LEAD] = "Leaders";
$wgExtraNamespaces[NS_LEAD_TALK] = "Leaders_talk"; // Note underscores in the namespace name.

// restrict "read" permission to logged in users
$wgNamespacePermissionLockdown[NS_LEAD]['read'] = [ 'sysop' ];
$wgNamespacePermissionLockdown[NS_LEAD_TALK]['read'] = [ 'sysop' ];
$wgNamespacePermissionLockdown[NS_LEAD]['writeapi'] = [ 'sysop' ];
$wgNamespacePermissionLockdown[NS_LEAD_TALK]['writeapi'] = [ 'sysop' ];

# VisualEditor: Ensure users can use VisualEditor in the Leaders and Help namespaces
$wgVisualEditorAvailableNamespaces = [
    'Leaders' => true,
    NS_HELP => true,
];

// prevent inclusion of pages from that namespace
$wgNonincludableNamespaces[] = NS_LEAD;
$wgNonincludableNamespaces[] = NS_LEAD_TALK;

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = true;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "en";

# Time zone
$wgLocaltimezone = "America/New_York";
$wgAmericanDates = true;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = getenv("WG_SECRET_KEY");

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = getenv("WG_UPGRADE_KEY");

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions["*"]["createaccount"] = false;
$wgGroupPermissions["*"]["edit"] = false;
$wgGroupPermissions["*"]["read"] = false;
$wgGroupPermissions["user"]["writeapi"] = true;

$wgWhitelistRead = [ "Main Page", "Help:Contents", "Special:CreateAccount", "Special:RequestAccount" ];

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "vector-2022";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MinervaNeue' );
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );

# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'Cite' );
wfLoadExtension( 'Citoid' );
wfLoadExtension( 'CodeEditor' );
wfLoadExtension( 'CommonsMetadata' );
wfLoadExtension( 'ConfirmAccount' );
wfLoadExtension( 'Discord' );
wfLoadExtension( 'ExternalData' );
wfLoadExtension( 'JsonConfig' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Lockdown' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'MobileFrontend' );
wfLoadExtension( 'MultimediaViewer' );
wfLoadExtension( 'PageImages' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'Popups' );
wfLoadExtension( 'Scribunto' );
wfLoadExtension( 'SimpleMathJax' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TemplateData' );
wfLoadExtension( 'TemplateStyles' );
wfLoadExtension( 'TextExtracts' );
wfLoadExtension( 'VisualEditor' );
wfLoadExtension( 'WikiEditor' );

// Math
$wgDefaultUserOptions['math'] = 'mathml';
$wgMathUseInternalRestbasePath = false;
$wgMathFullRestbaseURL = 'https://wikimedia.org/api/rest_';
$wgMathMathMLUrl = 'https://mathoid-beta.wmflabs.org';

// Confirm Account
$wgGroupPermissions['*']['createaccount'] = false; // REQUIRED to enforce account requests via this extension
$wgGroupPermissions['bureaucrat']['createaccount'] = true; //
$wgGroupPermissions['bureaucrat']['confirmaccount-notify'] = true;
$wgConfirmAccountContact = getenv("SMTP_EMAIL");

$wgEmailConfirmToEdit = true;

$wgUseImageMagick = true;

$wgConfirmAccountRequestFormItems = [
	'UserName'        => [ 'enabled' => true ],
	'RealName'        => [ 'enabled' => true ],
	'Biography'       => [ 'enabled' => false, 'minWords' => 50 ],
	'AreasOfInterest' => [ 'enabled' => false ],
	'CV'              => [ 'enabled' => false ],
	'Notes'           => [ 'enabled' => true ],
	'Links'           => [ 'enabled' => false ],
	'TermsOfService'  => [ 'enabled' => false ],
];

$wgDefaultUserOptions['usebetatoolbar'] = 1; // user option provided by WikiEditor extension

$wgDiscordIncomingWebhookUrl = getenv("DISCORD_WEBHOOK_URL");
$wgDiscordWebhookURL = [ getenv("DISCORD_WEBHOOK_URL") ];
// Required. Name the message will appear be sent from.
$wgDiscordFromName = "Wiki Updates";
// URL into your MediaWiki installation with the trailing /.
$wgDiscordNotificationWikiUrl = getenv("SERVER_NAME") . "/mediawiki/";
// Wiki script name. Leave this to default one if you do not have URL rewriting enabled.
$wgDiscordNotificationWikiUrlEnding = "index.php?title=";
// What method will be used to send the data to Discord server. By default this is "curl" which only works if you have the curl extension enabled. This can be: "curl" or "file_get_contents". Default: "curl"
$wgDiscordSendMethod = "curl";

// New user added into MediaWiki
$wgWebhooksNewUser = true;
// User or IP blocked in MediaWiki
$wgWebhooksBlockedUser = true;
// Article added to MediaWiki
$wgWebhooksAddedArticle = true;
// Article removed from MediaWiki
$wgWebhooksRemovedArticle = true;
// Article moved under new title in MediaWiki
$wgWebhooksMovedArticle = true;
// Article edited in MediaWiki
$wgWebhooksEditedArticle = true;
// File uploaded
$wgWebhooksFileUpload = true;
// Article protection settings changed
$wgWebhooksProtectedArticle = true;

$wgShowExceptionDetails = true;

$wgVectorNightMode['logged_in'] = true;
$wgVectorNightMode['logged_out'] = true;
$wgDefaultUserOptions['vector-theme'] = 'os';

$wgFileExtensions = [ 'png', 'gif', 'jpg', 'jpeg', 'doc',
	'xls', 'mpp', 'pdf', 'ppt', 'tiff', 'bmp', 'docx', 'xlsx',
	'pptx', 'ps', 'odt', 'ods', 'odp', 'odg'
];

$wgCitoidFullRestbaseURL = "https://en.wikipedia.org/api/rest_";
// $wgCitoidServiceUrl = 'https://citations.cbrxyz.com/api';

$wgJsonConfigEnableLuaSupport = true; // required to use JsonConfig in Lua
$wgJsonConfigModels['Tabular.JsonConfig'] = 'JsonConfig\JCTabularContent';
$wgJsonConfigs['Tabular.JsonConfig'] = [
        'namespace' => 486,
        'nsName' => 'Data',
        // page name must end in ".tab", and contain at least one symbol
        'pattern' => '/.\.tab$/',
        'license' => 'CC0-1.0',
        'isLocal' => false,
];

$wgJsonConfigModels['Map.JsonConfig'] = 'JsonConfig\JCMapDataContent';
$wgJsonConfigs['Map.JsonConfig'] = [
        'namespace' => 486,
        'nsName' => 'Data',
        // page name must end in ".map", and contain at least one symbol
        'pattern' => '/.\.map$/',
        'license' => 'CC0-1.0',
        'isLocal' => false,
];
$wgJsonConfigInterwikiPrefix = "commons";

$wgJsonConfigs['Tabular.JsonConfig']['remote'] = [
        'url' => 'https://commons.wikimedia.org/w/api.php'
];
$wgJsonConfigs['Map.JsonConfig']['remote'] = [
        'url' => 'https://commons.wikimedia.org/w/api.php'
];

# Mobile frontend
$wgDefaultMobileSkin = 'minerva';
